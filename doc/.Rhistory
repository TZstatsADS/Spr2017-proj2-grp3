pop_2010 <- pop[ ,c(1,2)]
cdi.pop.2010 <- merge(cdi_2010, pop_2010, by.x = "states")
cdi_2011 <- filter(cdi.gender,year==2011)
pop_2011 <- pop[ ,c(1,3)]
cdi.pop.2011 <- merge(cdi_2011, pop_2011, by.x = "states")
cdi_2012 <- filter(cdi.gender,year==2012)
pop_2012 <- pop[ ,c(1,4)]
cdi.pop.2012 <- merge(cdi_2012, pop_2012, by.x = "states")
cdi_2013 <- filter(cdi.gender,year==2013)
pop_2013 <- pop[ ,c(1,5)]
cdi.pop.2013 <- merge(cdi_2013, pop_2013, by.x = "states")
cdi_2014 <- filter(cdi.gender,year==2014)
pop_2014 <- pop[ ,c(1,6)]
cdi.pop.2014 <- merge(cdi_2014, pop_2014, by.x = "states")
cdi.pop <- rbind(cdi.pop.2010, cdi.pop.2011, cdi.pop.2012, cdi.pop.2013, cdi.pop.2014)
# add a new colum: the ratio of death among population
cdi.pop <- mutate(cdi.pop,
ratio = deathpop/population)
# get the clean state data
cdi.state <- select(cdi.pop, -datatype)
# write in csv file
write.csv(cdi.state,file = "../output/states mortality (year_disease_gender).csv")
asthma <- mutate(asthma, ratio==deathpop/100)
asthma$deathpop <- as.numeric.factor(asthma$deathpop)
asthma$deathpop <- as.numeric.factor(asthma$deathpop)
pre_pulmonary_18$deathpop <- as.numeric.factor(pre_pulmonary_18$deathpop)
pre_pulmonary_45$deathpop <- as.numeric.factor(pre_pulmonary_45$deathpop)
ratio
library(dplyr)
asthma.new <- mutate(asthma,
ratio=deathpop/100)
asthma <- filter(cdi, disease=="Current asthma prevalence among adults aged >= 18 years", datatype == "CrdPrev")
asthma.new <- mutate(asthma,
ratio=deathpop/100)
View(asthma.new)
asthma <- filter(cdi, disease=="Current asthma prevalence among adults aged >= 18 years", datatype == "CrdPrev")
as.numeric.factor <- function(x) {as.numeric(levels(x))[x]}
asthma$deathpop <- as.numeric.factor(asthma$deathpop)
asthma.new <- mutate(asthma,
ratio=deathpop/100)
View(asthma.new)
pre_pulmonary_45_new <- mutate(pre_pulmonary_45,
ratio=deathpop/100)
stroke <- filter(cdi, disease=="Mortality from cerebrovascular disease (stroke)", datatype == "Nmbr")
coronary_heart_disease <- filter(cdi, disease=="Mortality from coronary heart disease", datatype == "Nmbr")
heart_failure <- filter(cdi, disease=="Mortality from heart failure", datatype == "Nmbr")
pulmonary  <- filter(cdi,
disease=="Mortality with chronic obstructive pulmonary disease as underlying or contributing cause among adults aged >=45 years",
datatype == "Nmbr")
asthma <- filter(cdi, disease=="Current asthma prevalence among adults aged >= 18 years", datatype == "CrdPrev")
pre_pulmonary_18 <- filter(cdi, disease=="Prevalence of chronic obstructive pulmonary disease among adults >= 18", datatype == "CrdPrev")
pre_pulmonary_45 <- filter(cdi, disease=="Prevalence of chronic obstructive pulmonary disease among adults >= 45 years", datatype == "CrdPrev")
as.numeric.factor <- function(x) {as.numeric(levels(x))[x]}
asthma$deathpop <- as.numeric.factor(asthma$deathpop)
asthma.new <- mutate(asthma,
ratio=deathpop/100)
pre_pulmonary_18_new <- mutate(pre_pulmonary_18,
ratio=deathpop/100)
pre_pulmonary_45_new <- mutate(pre_pulmonary_45,
ratio=deathpop/100)
cdi.new <- rbind(stroke, coronary_heart_disease, diseases_of_the_heart,
heart_failure, cardiovascular_disease, pulmonary)
cdi.prev <- rbind(asthma.new, pre_pulmonary_18_new, pre_pulmonary_45_new)
cdi.new$deathpop <- as.numeric.factor(cdi.new$deathpop)
cdi.mort <- rbind(stroke, coronary_heart_disease, diseases_of_the_heart,
heart_failure, cardiovascular_disease, pulmonary)
cdi.prev <- rbind(asthma.new, pre_pulmonary_18_new, pre_pulmonary_45_new)
cdi.new$deathpop <- as.numeric.factor(cdi.new$deathpop)
cdi.raw <- read.csv("../data/CDI.csv")
questions <- levels(cdi.raw$Question)
mortality <- questions[c(116,117,118,119,120,121,122,40,164,165)]
cdi <- select(cdi.raw, YearStart, LocationDesc, Question, DataValueTypeID, DataValue, Stratification1)
cdi <- rename(cdi, year=YearStart, states=LocationDesc, disease=Question, datatype=DataValueTypeID, deathpop=DataValue, class=Stratification1)
stroke <- filter(cdi, disease=="Mortality from cerebrovascular disease (stroke)", datatype == "Nmbr")
coronary_heart_disease <- filter(cdi, disease=="Mortality from coronary heart disease", datatype == "Nmbr")
diseases_of_the_heart <- filter(cdi, disease=="Mortality from diseases of the heart", datatype == "Nmbr")
heart_failure <- filter(cdi, disease=="Mortality from heart failure", datatype == "Nmbr")
cardiovascular_disease <- filter(cdi, disease=="Mortality from total cardiovascular disease", datatype == "Nmbr")
pulmonary  <- filter(cdi,
disease=="Mortality with chronic obstructive pulmonary disease as underlying or contributing cause among adults aged >=45 years",
datatype == "Nmbr")
asthma <- filter(cdi, disease=="Current asthma prevalence among adults aged >= 18 years", datatype == "CrdPrev")
pre_pulmonary_18 <- filter(cdi, disease=="Prevalence of chronic obstructive pulmonary disease among adults >= 18", datatype == "CrdPrev")
pre_pulmonary_45 <- filter(cdi, disease=="Prevalence of chronic obstructive pulmonary disease among adults >= 45 years", datatype == "CrdPrev")
as.numeric.factor <- function(x) {as.numeric(levels(x))[x]}
asthma$deathpop <- as.numeric.factor(asthma$deathpop)
pre_pulmonary_18$deathpop <- as.numeric.factor(pre_pulmonary_18$deathpop)
pre_pulmonary_45$deathpop <- as.numeric.factor(pre_pulmonary_45$deathpop)
asthma.new <- mutate(asthma,
ratio=deathpop/100)
pre_pulmonary_18_new <- mutate(pre_pulmonary_18,
ratio=deathpop/100)
pre_pulmonary_45_new <- mutate(pre_pulmonary_45,
ratio=deathpop/100)
cdi.mort <- rbind(stroke, coronary_heart_disease, diseases_of_the_heart,
heart_failure, cardiovascular_disease, pulmonary)
cdi.prev <- rbind(asthma.new, pre_pulmonary_18_new, pre_pulmonary_45_new)
cdi.mort$deathpop <- as.numeric.factor(cdi.mort$deathpop)
cdi.mort.gender <- filter(cdi.mort, class == "Overall" | class == "Female" | class == "Male")
cdi.prev.gender <- filter(cdi.prev, class == "Overall" | class == "Female" | class == "Male")
View(cdi.mort.gender)
View(cdi.prev.gender)
population <- read.csv("../data/population.csv")
pop <- select(population, NAME, POPESTIMATE2010:POPESTIMATE2014)
pop <- rename(pop, states=NAME, population=POPESTIMATE2010, population=POPESTIMATE2011, population=POPESTIMATE2012,
population=POPESTIMATE2013, population=POPESTIMATE2014)
pop <- pop[c(1,6:57), ]
cdi_2010 <- filter(cdi.mort.gender,year==2010)
pop_2010 <- pop[ ,c(1,2)]
cdi.pop.2010 <- merge(cdi_2010, pop_2010, by.x = "states")
cdi_2011 <- filter(cdi.mort.gender,year==2011)
pop_2011 <- pop[ ,c(1,3)]
cdi.pop.2011 <- merge(cdi_2011, pop_2011, by.x = "states")
cdi_2012 <- filter(cdi.mort.gender,year==2012)
pop_2012 <- pop[ ,c(1,4)]
cdi.pop.2012 <- merge(cdi_2012, pop_2012, by.x = "states")
cdi_2013 <- filter(cdi.mort.gender,year==2013)
pop_2013 <- pop[ ,c(1,5)]
cdi.pop.2013 <- merge(cdi_2013, pop_2013, by.x = "states")
cdi_2014 <- filter(cdi.mort.gender,year==2014)
pop_2014 <- pop[ ,c(1,6)]
cdi.pop.2014 <- merge(cdi_2014, pop_2014, by.x = "states")
cdi.pop <- rbind(cdi.pop.2010, cdi.pop.2011, cdi.pop.2012, cdi.pop.2013, cdi.pop.2014)
# add a new colum: the ratio of death among population
cdi.pop <- mutate(cdi.pop,
ratio = deathpop/population)
View(cdi.pop)
# add population to cdi
cdi_2010 <- filter(cdi.mort.gender,year==2010)
cdi_2010_prev <- filter(cdi.prev.gender,year==2010)
pop_2010 <- pop[ ,c(1,2)]
cdi.pop.2010 <- merge(cdi_2010, pop_2010, by.x = "states")
cdi.pop.2010_prev <- merge(cdi_2010_prev, pop_2010, by.x = "states")
cdi_2011 <- filter(cdi.mort.gender,year==2011)
cdi_2011_prev <- filter(cdi.prev.gender,year==2011)
pop_2011 <- pop[ ,c(1,3)]
cdi.pop.2011 <- merge(cdi_2011, pop_2011, by.x = "states")
cdi.pop.2011_prev <- merge(cdi_2011_prev, pop_2011, by.x = "states")
cdi_2012 <- filter(cdi.mort.gender,year==2012)
cdi_2012_prev <- filter(cdi.prev.gender,year==2012)
pop_2012 <- pop[ ,c(1,4)]
cdi.pop.2012 <- merge(cdi_2012, pop_2012, by.x = "states")
cdi.pop.2012_prev <- merge(cdi_2012_prev, pop_2012, by.x = "states")
cdi_2013 <- filter(cdi.mort.gender,year==2013)
cdi_2013_prev <- filter(cdi.prev.gender,year==2013)
pop_2013 <- pop[ ,c(1,5)]
cdi.pop.2013 <- merge(cdi_2013, pop_2013, by.x = "states")
cdi.pop.2013_prev <- merge(cdi_2013_prev, pop_2013, by.x = "states")
cdi_2014 <- filter(cdi.mort.gender,year==2014)
cdi_2014_prev <- filter(cdi.prev.gender,year==2014)
pop_2014 <- pop[ ,c(1,6)]
cdi.pop.2014 <- merge(cdi_2014, pop_2014, by.x = "states")
cdi.pop.2014_prev <- merge(cdi_2014_prev, pop_2014, by.x = "states")
cdi.pop <- rbind(cdi.pop.2010, cdi.pop.2011, cdi.pop.2012, cdi.pop.2013, cdi.pop.2014)
cdi.pop.prev <- rbind(cdi.pop.2010_prev, cdi.pop.2011_prev, cdi.pop.2012_prev, cdi.pop.2013_prev, cdi.pop.2014_prev)
# add a new colum to cdi.pop: the ratio of death among population
cdi.pop <- mutate(cdi.pop,
ratio = deathpop/population)
View(cdi.pop)
View(cdi.pop.prev)
cdi.state <- rbind(cdi.pop, cdi.pop.prev)
View(cdi.state)
View(cdi.state)
# get the clean state data
cdi.state <- rbind(cdi.pop, cdi.pop.prev)
# write in csv file
write.csv(cdi.state,file = "../output/states disease and mortality.csv")
mortality_state <- read.csv("../output/states mortality (year_disease_gender).csv")
setwd("E:/statistics/applied data science/Project2/Spr2017-proj2-grp3/app_mortality_gender")
mortality_state <- read.csv("../output/states mortality (year_disease_gender).csv")
mortality_state <- read.csv("../output/states disease and mortality.csv")
mortality_nation <- mortality_state[mortality_state$states=="United States", ]
View(mortality_nation)
runApp()
runApp()
runApp()
g <- ggplot(mortalityDF(),
aes(x=year, y=ratio, col=factor(class)))
g
runApp()
mortality
runApp()
SelectedDisease <- c("Mortality from cerebrovascular disease (stroke)", "Mortality from coronary heart disease")
SelectedGender <- c("Female", "Male")
mortalityDF <- reactive({
mortality_nation %>%
unnest(data) %>%
filter(disease %in% SelectedDisease()) %>%
filter(class %in% SelectedGender())
})
SelectedDisease <- c("Mortality from cerebrovascular disease (stroke)", "Mortality from coronary heart disease")
SelectedGender <- c("Female", "Male")
mortalityDF <- mortality_nation %>%
unnest(data) %>%
filter(disease %in% SelectedDisease()) %>%
filter(class %in% SelectedGender())
SelectedDisease <- c("Mortality from cerebrovascular disease (stroke)", "Mortality from coronary heart disease")
SelectedGender <- c("Female", "Male")
mortalityDF <- mortality_nation %>%
filter(disease %in% SelectedDisease()) %>%
filter(class %in% SelectedGender())
mortalityDF <- mortality_nation %>%
filter(disease %in% SelectedDisease) %>%
filter(class %in% SelectedGender)
View(mortalityDF)
library(tidyr)
mortalityDF <- mortality_nation %>%
unnest(data) %>%
filter(disease %in% SelectedDisease) %>%
filter(class %in% SelectedGender)
mortalityDF <- mortality_nation %>%
filter(disease %in% SelectedDisease) %>%
filter(class %in% SelectedGender)
mortalityDF <- mortality_nation %>%
filter(disease %in% SelectedDisease)
View(mortalityDF)
runApp()
mortality
View(mortalityDF)
View(mortality_nation)
View(mortality_nation)
View(mortality_state)
mortalityDF <- mortality_nation %>%
filter(disease %in% SelectedDisease) %>%
filter(class %in% SelectedDisease)
View(mortalityDF)
mortalityDF <- mortality_nation %>%
filter(disease %in% SelectedDisease)
View(mortalityDF)
mortalityDF <- mortality_nation %>%
filter(disease %in% SelectedDisease)%>%
filter(class %in% SelectedGender)
SelectedGender <- c("Overall")
mortalityDF <- mortality_nation %>%
filter(disease %in% SelectedDisease)%>%
filter(class %in% SelectedGender)
g <- ggplot(mortalityDF(),
aes(x=year, y=ratio, col=factor(class))) +
labs(x="Year", y="Mortality rate") +
facet_wrap(~disease)+
scale_color_discrete(name="Gender", breaks=c(1:3), labels=GenderType)
g <- g + geom_point(aes(alpha=0.4))
g
library(ggplot2)
g <- ggplot(mortalityDF(),
aes(x=year, y=ratio, col=factor(class))) +
labs(x="Year", y="Mortality rate") +
facet_wrap(~disease)+
scale_color_discrete(name="Gender", breaks=c(1:3), labels=GenderType)
g <- ggplot(mortalityDF,
aes(x=year, y=ratio, col=factor(class))) +
labs(x="Year", y="Mortality rate") +
facet_wrap(~disease)+
scale_color_discrete(name="Gender", breaks=c(1:3), labels=GenderType)
GenderType <- unique(mortality_nation$class)
GenderType
library(ggplot2)
g <- ggplot(mortalityDF,
aes(x=year, y=ratio, col=factor(class))) +
labs(x="Year", y="Mortality rate") +
facet_wrap(~disease)+
scale_color_discrete(name="Gender", breaks=c(1:3), labels=as.vector(GenderType))
g <- g + geom_point(aes(alpha=0.4))
g
g <- ggplot(mortalityDF,
aes(x=year, y=ratio, col=factor(class))) +
labs(x="Year", y="Mortality rate") +
facet_wrap(~disease)+
scale_color_discrete(name="Gender", breaks=c(1:3), labels=as.vector(GenderType))
g <- g + geom_point()
g <- ggplot(mortalityDF,
aes(x=year, y=ratio, col=factor(class))) +
labs(x="Year", y="Mortality rate") +
facet_wrap(~disease)+
scale_color_discrete(name="Gender", breaks=c(1:3), labels=as.vector(GenderType))
g <- g + geom_point()
g <- ggplot(mortalityDF,
aes(x=year, y=ratio, col=factor(class))) +
labs(x="Year", y="Mortality rate") +
facet_wrap(~disease)+
scale_color_discrete(name="Gender", breaks=c(1:3), labels=as.vector(GenderType))
g <- g + geom_point()
g
library(ggplot2)
g <- ggplot(mortalityDF,
aes(x=year, y=ratio, col=factor(class))) +
labs(x="Year", y="Mortality rate") +
facet_wrap(~disease)+
scale_color_discrete(name="Gender", breaks=c(1:3), labels=as.vector(GenderType))
g <- g + geom_line()
g
g <- ggplot(mortalityDF,
aes(x=year, y=ratio, col=factor(class))) +
labs(x="Year", y="Mortality rate") +
facet_wrap(~disease)+
scale_color_discrete(name="Gender", breaks=c(1:3), labels=as.vector(GenderType))
g <- g + geom_point()
g
g <- ggplot(mortalityDF,
aes(x=year, y=ratio, col=factor(class))) +
labs(x="Year", y="Mortality rate (Prevalence)") +
facet_wrap(~disease)+
scale_color_discrete(name="Gender", breaks=c(1:3), labels=as.vector(GenderType))
g <- g + geom_point() + geom_line()
g
runApp()
SelectedDisease <- c("Mortality from cerebrovascular disease (stroke)")
SelectedGender <- c("Overall")
library(tidyr)
mortalityDF <- mortality_nation %>%
filter(disease %in% SelectedDisease)%>%
filter(class %in% SelectedGender)
GenderType <- unique(mortality_nation$class)
library(ggplot2)
g <- ggplot(mortalityDF,
aes(x=year, y=ratio, col=factor(class))) +
labs(x="Year", y="Mortality rate (Prevalence)") +
facet_wrap(~disease)+
scale_color_discrete(name="Gender", breaks=c(1:3), labels=as.vector(GenderType))
g <- g + geom_point() + geom_line()
g
g <- g + geom_point() + geom_line()
SelectedDisease <- c("Mortality from cerebrovascular disease (stroke)")
runApp()
runApp()
View(cdi.pop)
View(cdi.state)
knitr::opts_chunk$set(echo = TRUE)
cdi.pop.new <- cdi.pop[-cdi.pop$states=="United States", ]
cdi.pop.new <- cdi.pop[cdi.pop$states!="United States", ]
View(cdi.pop.new)
national_mortality <- cdi.pop.new %>%
group_by(year, disease, class) %>%
select(deathpop, ratio) %>%
summarise(
deathtotal = sum(deathpop, na.rm=TRUE)
ratiototal = sum(ratio, na.rm=TRUE)
national_mortality <- cdi.pop.new %>%
group_by(year, disease, class) %>%
select(deathpop, ratio) %>%
summarise(
deathtotal = sum(deathpop, na.rm=TRUE),
ratiototal = sum(ratio, na.rm=TRUE)
)
View(national_mortality)
View(cdi.raw)
View(cdi)
View(cardiovascular_disease)
View(stroke)
mortality_nation <- read.csv("../output/national_mortality.csv")
runApp()
View(mortality_nation)
runApp()
runApp()
runApp()
ggplot(iris) + geom_line(aes(Sepal.Width, Sepal.Length, color=Species))
ggplot(iris) + geom_line(aes(Sepal.Width, Sepal.Length, color=Species)) + scale_color_discrete(name="gender")
ggplot(iris) + geom_line(aes(Sepal.Width, Sepal.Length, color=Species)) + scale_color_discrete(name="gender", breaks=1:3)
ggplot(iris) + geom_line(aes(Sepal.Width, Sepal.Length, color=Species)) + scale_color_discrete(name="gender", breaks=waiver())
L
ggplot(iris) + geom_line(aes(Sepal.Width, Sepal.Length, color=Species)) + scale_color_discrete(name="gender", breaks=NULL)
ggplot(iris) + geom_line(aes(Species, Sepal.Length, color=Species)) + scale_color_discrete(name="gender", breaks='')
ggplot(iris) + geom_line(aes(Species, Sepal.Length, color=Species)) + scale_color_discrete(name="gender", breaks=c('setotosa', 'versicocolor','somethig')
)
discrete_scale
ggproto
ggplot(iris%>%filter(Species!="Setosa")) + geom_line(aes(Sepal.Width, Sepal.Length, color=Species)) + scale_color_discrete(name="gender", labels=c('s','d','f'))
ggplot(iris%>%filter(Species!="setosa")) + geom_line(aes(Sepal.Width, Sepal.Length, color=Species)) + scale_color_discrete(name="gender", labels=c('s','d','f'))
iris$Species
runApp()
runApp()
runApp()
runApp('E:/statistics/applied data science/Project2/Spr2017-proj2-grp3/app_map')
runApp('E:/statistics/applied data science/Project2/Spr2017-proj2-grp3/app_marie')
install.packages("shinydashboard")
runApp('E:/statistics/applied data science/Project2/Spr2017-proj2-grp3/app_marie')
setwd("E:/statistics/applied data science/Project2/Spr2017-proj2-grp3/app_marie")
runApp()
source("./lib/helper_functions.R")
source("../lib/helper_functions.R")
runApp()
runApp()
install.packages("plotly")
library(plotly)
# Install and load packages
packages.used=c("shiny", "ggplot2", "dplyr", "plotly", "tidyr")
# check packages that need to be installed.
packages.needed=setdiff(packages.used,
intersect(installed.packages()[,1],
packages.used))
# install additional packages
if(length(packages.needed)>0){
install.packages(packages.needed, dependencies = TRUE,
repos='http://cran.us.r-project.org')
}
library(shiny)
library(dplyr)
library(ggplot2)
library(plotly)
library(tidyr)
mortality_states <- read.csv("../output/states disease prevalence and mortality.csv")
mortality_states <- filter(mortality_states, statesAbbr != "US")
install.packages("plotly")
library(plotly)
install.packages("plotly")
p <- plot_ly(mortalityDF, x = ~ratiototal, color = ~class, type = "box")
p
View(mortalityDF)
p <- plot_ly(mortalityDF, x = ~ratio, color = ~class, type = "box")
p
p <- plot_ly(mortalityDF, y = ~ratio, color = ~class, type = "box")
p
setwd("E:/statistics/applied data science/Project2/Spr2017-proj2-grp3/doc")
View(mortality_nation)
mortality_states <- read.csv("../output/states disease prevalence and mortality.csv")
View(mortality_states)
mortality <- filter(mortality_nation, states != "United States")
mortality <- filter(mortality_states, states != "United States")
View(mortality_states)
runApp('E:/statistics/applied data science/Project2/Spr2017-proj2-grp3/app_boxplot')
runApp('E:/statistics/applied data science/Project2/Spr2017-proj2-grp3/app_boxplot')
p <- plotly(mortality_states, y = ~ratio, color = ~class, type = "box")
runApp('E:/statistics/applied data science/Project2/Spr2017-proj2-grp3/app_boxplot')
runApp('E:/statistics/applied data science/Project2/Spr2017-proj2-grp3/app_boxplot')
runApp('E:/statistics/applied data science/Project2/Spr2017-proj2-grp3/app_boxplot')
testdf <- mortality_states %>%
filter(year=2010)%>%
filter(class="Overall")%>%
select(year, disease, class, ratio)
testdf <- mortality_states %>%
filter(year==2010)%>%
filter(class=="Overall")%>%
select(year, disease, class, ratio)
p <- plot_ly(testdf, y = ~ratio, color = ~disease, type = "box")
p
View(mortality_states)
mortality_states <- read.csv("../output/states disease prevalence and mortality.csv")
testdf <- mortality_states %>%
filter(year==2010)%>%
filter(class=="Overall")%>%
select(year, disease, class, ratio)
p <- plot_ly(testdf, y = ~ratio, color = ~disease, type = "box")
p
testdf <- mortality_states %>%
filter(year==2010)%>%
filter(class=="Overall")%>%
select(year, disease, class, ratio)
p <- plot_ly(testdf, y = ~ratio, color = ~disease, type = "box", boxpoints = "all", jitter = 0.3)
p
runApp('E:/statistics/applied data science/Project2/Spr2017-proj2-grp3/app_boxplot')
View(testdf)
p <- plot_ly(testdf, x = ~disease, y = ~ratio, color = ~class, type = "box") %>%
layout(boxmode = "group")
p
p <- plot_ly(testdf, x = ~disease, y = ~ratio, color = ~class, type = "box") %>%
layout(mapbox = "group")
p
testdf <- mortality_states %>%
filter(year==2010)%>%
select(year, disease, class, ratio)
p <- plot_ly(testdf, x = ~disease, y = ~ratio, color = ~class, type = "box") %>%
layout(mapbox = "group")
p
p <- plot_ly(testdf, x = ~disease, y = ~ratio, color = ~class, type = "box") %>%
layout(maptype = "group")
p
%>%
p <- plot_ly(testdf, x = ~disease, y = ~ratio, color = ~class, type = "box")
p
p <- plot_ly(testdf, x = ~disease, y = ~ratio, color = ~class, type = "box") %>%
layout(barmode="group")
p
testdf <- mortality_states %>%
filter(class=="Overall") %>%
select(year, disease, class, ratio)
p <- plot_ly(testdf, x = ~disease, y = ~ratio, color = ~year, type = "box") %>%
layout(barmode="group")
p
p <- plot_ly(testdf, x = ~disease, y = ~ratio, color = ~year, type = "box") %>%
layout(barmode="group")
p
p <- plot_ly(testdf, x = ~disease, y = ~ratio, color = ~year, type = "box")
p
testdf <- mortality_states %>%
filter(class=="Overall") %>%
select(year, disease, ratio)
View(testdf)
p <- plot_ly(testdf, x = ~disease, y = ~ratio, color = ~factor(year), type = "box")
p
testdf <- mortality_states %>%
filter(year==2010) %>%
select(year, disease, class, ratio)
p <- plot_ly(testdf, x = ~disease, y = ~ratio, color = ~factor(class), type = "box")
p
runApp('E:/statistics/applied data science/Project2/Spr2017-proj2-grp3/app_boxplot')
runApp('E:/statistics/applied data science/Project2/Spr2017-proj2-grp3/app_boxplot')
View(mortality)
unique(mortality$disease)
runApp('E:/statistics/applied data science/Project2/Spr2017-proj2-grp3/app_boxplot')
runApp('E:/statistics/applied data science/Project2/Spr2017-proj2-grp3/app_boxplot')
mortalityDF()
View(mortality_nation)
runApp('E:/statistics/applied data science/Project2/Spr2017-proj2-grp3/app_boxplot')
runApp('E:/statistics/applied data science/Project2/Spr2017-proj2-grp3/app_boxplot')
runApp('E:/statistics/applied data science/Project2/Spr2017-proj2-grp3/app_boxplot')
runApp('E:/statistics/applied data science/Project2/Spr2017-proj2-grp3/app_boxplot')
runApp('E:/statistics/applied data science/Project2/Spr2017-proj2-grp3/app_boxplot')
runApp('E:/statistics/applied data science/Project2/Spr2017-proj2-grp3/app_boxplot')
runApp('E:/statistics/applied data science/Project2/Spr2017-proj2-grp3/app_boxplot')
runApp('E:/statistics/applied data science/Project2/Spr2017-proj2-grp3/app_boxplot')
runApp('E:/statistics/applied data science/Project2/Spr2017-proj2-grp3/app_boxplot')
runApp('E:/statistics/applied data science/Project2/Spr2017-proj2-grp3/app_boxplot')
