# m.tdm.idf.tidy <- tdm.idf.tidy %>%
#   cast_sparse(document, term, count)
# list of presidents who did two terms in office
prex.out <- substr(speeches, 6, nchar(speeches)-4)
speeches.info <- as.data.frame(prex.out)
speeches.info <- cSplit(speeches.info, "prex.out", "-")
colnames(speeches.info)[1] <- "name"
colnames(speeches.info)[2] <- "term"
speeches.info$prex.out_3 <- NULL
president.list <- as.character(speeches.info[speeches.info$term==2,]$name)
print(president.list)
# update all dtms tables so that they contain only speeches given by presidents who stayed two terms in office
# see the file processing.R for details about the functions used in this chunk
dtm.tidy <- update.tables(dtm.tidy,president.list)
dtm.idf.tidy <- update.tables(dtm.idf.tidy,president.list)
dtm.all <- summarise(group_by(dtm.tidy, word), count = sum(count))
dtm.idf.all <- summarise(group_by(dtm.idf.tidy, word), count = sum(count))
ui <- fluidPage(selectInput(inputId = "data","", president.list),
plotOutput(outputId = "wordclouds")
)
server <- function(input, output) {
data <- reactive({
dtm.idf.tidy[dtm.idf.tidy$document==term1,]
})
output$wordclouds <- renderPlot({
wordcloud(data()$word, data()$count,
main = "1st Term",
scale=c(5,0.5),
max.words=70,
min.freq=1,
random.order=FALSE,
rot.per=0.0,
use.r.layout=T,
random.color=FALSE,
colors=brewer.pal(9,"Blues"))
})
}
shinyApp(ui = ui, server = server)
library(ISLR)
names(Smarket)   # Contains % returns for S&P 500 for 1250 days from 2001 to 2005
dim(Smarket)     # It also contains returns for 5 previous days and previous day's trading volume
summary(Smarket)
pairs(Smarket)
pairs(Smarket)
cor(Smarket[,-9])
attach(Smarket)
names(Smarket)
plot(Volume)
glm.fit=glm(Direction~Lag1+Lag2+Lag3+Lag4+Lag5+Volume,data=Smarket,family=binomial)
summary(glm.fit)
coef(glm.fit)
summary(glm.fit)$coef
summary(glm.fit)$coef[,4]
glm.probs=predict(glm.fit,type="response")
dim(Smarket)
glm.probs[1:10]
contrasts(Direction)
glm.pred=rep("Down",1250)  # A 1250 x 1 vector with "Down" in every position
glm.pred[glm.probs>.5]="Up"
table(glm.pred,Direction)
(507+145)/1250
mean(glm.pred==Direction)
train=(Year<2005)   # Creating separate training and test sets
Smarket.2005=Smarket[!train,]
dim(Smarket.2005)
Direction.2005=Direction[!train]
Direction.2005
predict(glm.fit,newdata=data.frame(Lag1=c(1.2,1.5),Lag2=c(1.1,-0.8)),type="response")
train=(Year<2005)   # Creating separate training and test sets
Smarket.2005=Smarket[!train,]
dim(Smarket.2005)
Direction.2005=Direction[!train]
# Notice use of subset=train argument on next line
glm.fit=glm(Direction~Lag1+Lag2+Lag3+Lag4+Lag5+Volume,data=Smarket,family=binomial,subset=train)
glm.probs=predict(glm.fit,Smarket.2005,type="response")
glm.pred=rep("Down",252)
glm.pred[glm.probs>.5]="Up"
table(glm.pred,Direction.2005) # confusion matrix for test set
mean(glm.pred==Direction.2005)
mean(glm.pred!=Direction.2005)  # test error rate is 52% Not good at all ...
# Recall p-values are all pretty large so perhaps a good idea to throw most of them out
glm.fit=glm(Direction~Lag1+Lag2,data=Smarket,family=binomial,subset=train)  # Just using lag1 and lag2
glm.probs=predict(glm.fit,Smarket.2005,type="response")
glm.pred=rep("Down",252)
glm.pred[glm.probs>.5]="Up"
table(glm.pred,Direction.2005)
mean(glm.pred==Direction.2005)   # results are "better": 56% of moves correctly predicted
# But it turns out market went up 56% of the time in 2005 so results not very good really
106/(106+76)  # =58.2% = % of correct predictions when prediction was "Up"
# Can get specific predicted probabilities by passing values of explanatory variables to the fitted model
predict(glm.fit,newdata=data.frame(Lag1=c(1.2,1.5),Lag2=c(1.1,-0.8)),type="response")
library(MASS)
lda.fit=lda(Direction~Lag1+Lag2,data=Smarket,subset=train)  # fit LDA on same data
lda.fit
plot(lda.fit)
plot(lda.fit)
lda.pred=predict(lda.fit, Smarket.2005)
names(lda.pred)
lda.class=lda.pred$class
table(lda.class,Direction.2005)
sum(lda.pred$posterior[,1]>=.5)  # posterior is an n x K=2  matrix of poserior probs (n = # of data points)
sum(lda.pred$posterior[,1]<.5)
lda.pred$posterior[1:20,1]
lda.class[1:20]
sum(lda.pred$posterior[,1]>.9)
library(class)
train.X=cbind(Lag1,Lag2)[train,]
View(train.X)
setwd("~/Documents/Columbia/Applied Data Science/Spr2017-proj2-grp3/data")
df1 <- read.csv("Behavioral_Risk_Factor_Data__Tobacco_Use__2010_And_Prior_.csv")
df2 <- read.csv("Behavioral_Risk_Factor_Data__Tobacco_Use__2011_to_present_.csv")
df2$DisplayOrder <- NULL
df2$SubMeasureID <- NULL
consumption_states <- rbind(df1,df2)
consumption_states$TopicType <- NULL
consumption_states$DataSource <- NULL
consumption_states$StratificationID1 <- NULL
consumption_states$StratificationID2 <- NULL
consumption_states$StratificationID3 <- NULL
consumption_states$StratificationID4 <- NULL
consumption_states$TopicTypeId <- NULL
consumption_states$TopicId <- NULL
consumption_states$MeasureId <- NULL
consumption_states$GeoLocation <- NULL
consumption_states$Sample_Size <- NULL
consumption_states$High_Confidence_Limit <- NULL
consumption_states$Low_Confidence_Limit <- NULL
consumption_states$Data_Value_Std_Err <- NULL
shiny::runApp('~/Documents/Columbia/Applied Data Science/Spr2017-proj2-grp3/app')
install.packages("leaflet")
runApp('~/Documents/Columbia/Applied Data Science/Spr2017-proj2-grp3/app')
df1 <- read.csv("Behavioral_Risk_Factor_Data__Tobacco_Use__2010_And_Prior_.csv")
df2 <- read.csv("Behavioral_Risk_Factor_Data__Tobacco_Use__2011_to_present_.csv")
df2$DisplayOrder <- NULL
df2$SubMeasureID <- NULL
consumption_states <- rbind(df1,df2)
consumption_states$TopicType <- NULL
consumption_states$DataSource <- NULL
consumption_states$StratificationID1 <- NULL
consumption_states$StratificationID2 <- NULL
consumption_states$StratificationID3 <- NULL
consumption_states$StratificationID4 <- NULL
consumption_states$TopicTypeId <- NULL
consumption_states$TopicId <- NULL
consumption_states$MeasureId <- NULL
consumption_states$GeoLocation <- NULL
consumption_states$Sample_Size <- NULL
consumption_states$High_Confidence_Limit <- NULL
consumption_states$Low_Confidence_Limit <- NULL
consumption_states$Data_Value_Std_Err <- NULL
consumption_status <-
consumption_states %>%
subset(TopicDesc=="Cigarette Use (Adults)" & MeasureDesc=="Smoking Status") %>%
subset(Gender=="Overall" & Age=="All Ages" & Race=="All Races")
consumption_status <-
consumption_status %>%
subset(LocationAbbr=="AL")
g <-
ggplot(consumption_status, aes(Response, Data_Value, fill=Response)) +
geom_point(aes(frame="YEAR"))
ggplotly(g)
pie2 <-
ggplot(consumption_status, aes(Response, Data_Value, fill=Response)) +
geom_bar(state="identity")
pie2
pie2 <-
ggplot(consumption_status, aes(Response, Data_Value, fill=Response)) +
geom_bar(stat="identity")
pie2
ggplotly(pie2)
bar <-
plot_ly(data= consumption_status, labels=~Response, values=~Data_Value,
type="bar")
bar
bar <-
plot_ly(data= consumption_status, x=~Response, y=~Data_Value,
type="bar")
bar
View(consumption_status)
bar <-
plot_ly(data= consumption_status, x=~Response, y=~Data_Value, frame=~YEAR
type="bar")
bar
bar <-
plot_ly(data= consumption_status, x=~Response, y=~Data_Value, frame=~YEAR,
type="bar")
bar
bar <-
plot_ly(data= consumption_status, x=~Response, y=~Data_Value, frame=~YEAR,
type="scatter", mode="marker")
bar
bar <-
plot_ly(data= consumption_status, x=~Response, y=~Data_Value, frame=~YEAR,
type="scatter")
bar
bar <-
plot_ly(data= consumption_status, x=~Response, y=~Data_Value, frame=~YEAR,
type="scatter", mode="markers")
bar
pie2 <-
ggplot(consumption_status, aes(Response, Data_Value, fill=Response)) +
geom_bar(stat="identity")
pie2
ggplotly(pie2)
pie2 <-
ggplot(consumption_status, aes(Response, Data_Value, fill=Response)) +
geom_bar(stat="identity")
pie2
pie2 <-
ggplot(consumption_status, aes(Response, Data_Value, fill=Response)) +
geom_bar(stat="identity")
pie2
ggplotly(pie2)
consumption_status <-
consumption_states %>%
subset(TopicDesc=="Cigarette Use (Adults)" & MeasureDesc=="Smoking Status") %>%
subset(Gender=="Overall" & Age=="All Ages" & Race=="All Races")
consumption_status <-
consumption_status %>%
subset(LocationAbbr=="AL" & YEAR=="2010")
pie2 <-
ggplot(consumption_status, aes(Response, Data_Value, fill=Response)) +
geom_bar(stat="identity")
pie2
ggplotly(pie2)
pie2 <-
ggplot(consumption_status, aes(Response, Data_Value, fill=Response)) +
geom_bar(stat="identity") +
xlab("Status") +
ylab("Number of People (%)") +
theme(legend.position="none")
pie2
ggplotly(pie2)
bp <-
ggplot(consumption_status, aes(x=Data_Value, y=Response, fill=response)) +
geom_boxplot()
bp
consumption_status <-
consumption_states %>%
subset(TopicDesc=="Cigarette Use (Adults)" & MeasureDesc=="Smoking Status") %>%
subset(Gender=="Overall" & Age=="All Ages" & Race=="All Races")
consumption_status <-
consumption_status %>%
subset(YEAR=="2010")
bp <-
ggplot(consumption_status, aes(x=Data_Value, y=Response, fill=Response)) +
geom_boxplot()
bp
bp <-
ggplot(consumption_status, aes(x=Response, y=Data_Value, fill=Response)) +
geom_boxplot()
bp
ggplotly(bp)
bp <-
ggplot(consumption_status, aes(x=Response, y=Data_Value, fill=Response)) +
geom_boxplot() +
geom_jitter() +
xlab("Status") +
ylab("Number of People (%)") +
theme(legend.position="none")
ggplotly(bp)
bp <-
ggplot(consumption_status, aes(x=Response, y=Data_Value, fill=Response)) +
geom_boxplot() +
geom_jitter(alpha=0.6) +
xlab("Status") +
ylab("Number of People (%)") +
theme(legend.position="none")
ggplotly(bp)
bp <-
ggplot(consumption_status, aes(x=Response, y=Data_Value, fill=Response)) +
geom_boxplot() +
geom_jitter(size=1, alpha=0.6) +
xlab("Status") +
ylab("Number of People (%)") +
theme(legend.position="none")
ggplotly(bp)
bp <-
ggplot(consumption_status, aes(x=Response, y=Data_Value, fill=Response)) +
geom_boxplot() +
geom_jitter(size=1,
alpha=0.6,
pch=1) +
xlab("Status") +
ylab("Number of People (%)") +
theme(legend.position="none")
ggplotly(bp)
p <- plot_ly(consumption_status, y=~Data_Value, color=~Response,
type="box", boxpoints = "all", jitter = 0.3) %>%
layout(title="Proportion of Smokers",
yaxis=list(title="Proportion of Smokers (%)"))
p
p <- ggplot(consumption_status, aes(x=Response, y=Data_Value, fill=LocationAbbr)) +
geom_point()
p
p <- ggplot(consumption_status, aes(x=Response, y=Data_Value, fill=LocationAbbr)) +
geom_jitter()
p
p <- ggplot(consumption_status, aes(x=Response, y=Data_Value, fill=LocationAbbr)) +
geom_jitter()
ggplotly(p)
p <- ggplot(consumption_status, aes(x=Response, y=Data_Value, fill=LocationAbbr)) +
geom_jitter() +
xlab("Status") +
ylab("Number of People (%)") +
theme(legend.position="none")
ggplotly(p)
p <- ggplot(consumption_status, aes(x=Response, y=Data_Value, fill=LocationAbbr, color=Response)) +
geom_jitter() +
xlab("Status") +
ylab("Number of People (%)") +
theme(legend.position="none")
ggplotly(p)
p <- ggplot(consumption_status, aes(x=Response, y=Data_Value, fill=LocationDesc, color=Response)) +
geom_jitter() +
xlab("Status") +
ylab("Number of People (%)") +
theme(legend.position="none")
ggplotly(p)
consumption_status <-
consumption_states %>%
subset(TopicDesc=="Cigarette Use (Adults)" & MeasureDesc=="Smoking Status") %>%
subset(Gender=="Overall" & Age=="All Ages" & Race=="All Races")
consumption_status <-
consumption_states %>%
subset(TopicDesc=="Cigarette Use (Adults)" & MeasureDesc=="Smoking Status") %>%
subset(Gender=="Overall" & Race=="All Races")
consumption_status <-
consumption_status %>%
subset(YEAR=="2010")
consumption_status <-
consumption_states %>%
subset(TopicDesc=="Cigarette Use (Adults)" & MeasureDesc=="Smoking Status") %>%
subset(Gender=="Overall" & Race=="All Races")
consumption_status <-
consumption_states %>%
subset(TopicDesc=="Cigarette Use (Adults)" & MeasureDesc=="Smoking Status") %>%
subset(Gender=="Overall" & Race=="All Races")
View(consumption_states)
View(consumption_status)
consumption_status <-
consumption_states %>%
subset(TopicDesc=="Cigarette Use (Adults)" & MeasureDesc=="Current Smoking") %>%
subset(Gender=="Overall" & Race=="All Races")
consumption_status <-
consumption_status %>%
subset(YEAR=="2010")
p <- ggplot(consumption_status, aes(x=Age, y=Data_Value, fill=LocationDesc, color=Age)) +
geom_jitter() +
xlab("Status") +
ylab("Number of People (%)") +
theme(legend.position="none")
ggplotly(p)
# Add year 1995 to 2015
consumption_status <-
consumption_states %>%
subset(TopicDesc=="Cigarette Use (Adults)" & MeasureDesc=="Current Smoking") %>%
subset(Gender=="Overall" & Race=="All Races") %>%
subset(Age="18 to 24 Years" | Age="25 to 44 Years" | Age="45 to 64 Years" | Age="65 Years or Older")
consumption_status <-
consumption_status %>%
subset(YEAR=="2010")
p <- ggplot(consumption_status, aes(x=Age, y=Data_Value, fill=LocationDesc, color=Age)) +
geom_jitter() +
xlab("Status") +
ylab("Number of People (%)") +
theme(legend.position="none")
ggplotly(p)
# Add year 1995 to 2015
consumption_status <-
consumption_states %>%
subset(TopicDesc=="Cigarette Use (Adults)" & MeasureDesc=="Current Smoking") %>%
subset(Gender=="Overall" & Race=="All Races") %>%
subset(Age=="18 to 24 Years" | Age=="25 to 44 Years" | Age=="45 to 64 Years" | Age=="65 Years or Older")
consumption_status <-
consumption_status %>%
subset(YEAR=="2010")
p <- ggplot(consumption_status, aes(x=Age, y=Data_Value, fill=LocationDesc, color=Age)) +
geom_jitter() +
xlab("Status") +
ylab("Number of People (%)") +
theme(legend.position="none")
ggplotly(p)
p <- ggplot(consumption_status, aes(x=Age, y=Data_Value, fill=LocationDesc, color=Age)) +
geom_jitter(jitter=0.3) +
xlab("Status") +
ylab("Number of People (%)") +
theme(legend.position="none")
ggplotly(p)
# Add year 1995 to 2015
p <- ggplot(consumption_status, aes(x=Age, y=Data_Value, fill=LocationDesc, color=Age)) +
geom_jitter(width=0.2) +
xlab("Status") +
ylab("Number of People (%)") +
theme(legend.position="none")
ggplotly(p)
# Add year 1995 to 2015
p <- ggplot(consumption_status, aes(x=Age, y=Data_Value, fill=LocationDesc, color=Age)) +
geom_jitter(width=0.25) +
xlab("Status") +
ylab("Number of People (%)") +
theme(legend.position="none")
ggplotly(p)
# Add year 1995 to 2015
consumption_status <-
consumption_states %>%
subset(TopicDesc=="Cigarette Use (Adults)" & MeasureDesc=="Current Smoking") %>%
subset(Gender=="Overall" & Race=="All Races") %>%
subset(Age=="18 to 24 Years" | Age=="25 to 44 Years" | Age=="45 to 64 Years" | Age=="65 Years and Older")
consumption_status <-
consumption_status %>%
subset(YEAR=="2010")
p <- ggplot(consumption_status, aes(x=Age, y=Data_Value, fill=LocationDesc, color=Age)) +
geom_jitter(width=0.25) +
xlab("Status") +
ylab("Number of People (%)") +
theme(legend.position="none")
ggplotly(p)
runApp('~/Documents/Columbia/Applied Data Science/Spr2017-proj2-grp3/app')
runApp('~/Documents/Columbia/Applied Data Science/Spr2017-proj2-grp3/app')
runApp('~/Documents/Columbia/Applied Data Science/Spr2017-proj2-grp3/app')
runApp('~/Documents/Columbia/Applied Data Science/Spr2017-proj2-grp3/app')
runApp('~/Documents/Columbia/Applied Data Science/Spr2017-proj2-grp3/app')
runApp('~/Documents/Columbia/Applied Data Science/Spr2017-proj2-grp3/app')
runApp('~/Documents/Columbia/Applied Data Science/Spr2017-proj2-grp3/app')
runApp('~/Documents/Columbia/Applied Data Science/Spr2017-proj2-grp3/app')
runApp('~/Documents/Columbia/Applied Data Science/Spr2017-proj2-grp3/app')
runApp('~/Documents/Columbia/Applied Data Science/Spr2017-proj2-grp3/to_delete/app_mortality_consumption')
runApp('~/Documents/Columbia/Applied Data Science/Spr2017-proj2-grp3/to_delete/app_mortality_consumption')
runApp('~/Documents/Columbia/Applied Data Science/Spr2017-proj2-grp3/app_mortality_consumption')
runApp('~/Documents/Columbia/Applied Data Science/Spr2017-proj2-grp3/app_gender_mortality')
runApp('~/Documents/Columbia/Applied Data Science/Spr2017-proj2-grp3/app')
runApp('~/Documents/Columbia/Applied Data Science/Spr2017-proj2-grp3/app')
consumption_us <- read.csv("consumption_tobacco_us.csv", sep=";")
g <-
plot_ly(data=consumption_us, x=~year, y=~percentage,
type="scatter", mode="lines+markers") %>%
layout(
title="Smokers in the US",
yaxis=list(title="Proportion of Smokers (%)", range=c(0,50)),
xaxis=list(title="Year")
)
g
df1 <- read.csv("Behavioral_Risk_Factor_Data__Tobacco_Use__2010_And_Prior_.csv")
df2 <- read.csv("Behavioral_Risk_Factor_Data__Tobacco_Use__2011_to_present_.csv")
df2$DisplayOrder <- NULL
df2$SubMeasureID <- NULL
consumption_states <- rbind(df1,df2)
consumption_states$TopicType <- NULL
consumption_states$DataSource <- NULL
consumption_states$StratificationID1 <- NULL
consumption_states$StratificationID2 <- NULL
consumption_states$StratificationID3 <- NULL
consumption_states$StratificationID4 <- NULL
consumption_states$TopicTypeId <- NULL
consumption_states$TopicId <- NULL
consumption_states$MeasureId <- NULL
consumption_states$GeoLocation <- NULL
consumption_states$Sample_Size <- NULL
consumption_states$High_Confidence_Limit <- NULL
consumption_states$Low_Confidence_Limit <- NULL
consumption_states$Data_Value_Std_Err <- NULL
consumption_status <-
consumption_states %>%
subset(TopicDesc=="Cigarette Use (Adults)" & MeasureDesc=="Smoking Status") %>%
subset(Gender=="Overall" & Age=="All Ages" & Race=="All Races")
consumption_status <-
consumption_status %>%
subset(LocationAbbr=="AL" & YEAR=="2010")
bar <-
ggplot(consumption_status, aes(Response, Data_Value, fill=Response)) +
geom_bar(stat="identity") +
xlab("Status") +
ylab("Number of People (%)") +
theme(legend.position="none")
ggplotly(bar)
consumption_status <-
consumption_states %>%
subset(TopicDesc=="Cigarette Use (Adults)" & MeasureDesc=="Smoking Status") %>%
subset(Gender=="Overall" & Age=="All Ages" & Race=="All Races")
consumption_status <-
consumption_status %>%
subset(YEAR=="2010")
p <- ggplot(consumption_status, aes(x=Response, y=Data_Value, fill=LocationDesc, color=Response)) +
geom_jitter() +
xlab("Status") +
ylab("Number of People (%)") +
theme(legend.position="none")
ggplotly(p)
# Add year 1995 to 2015
runApp('~/Documents/Columbia/Applied Data Science/Spr2017-proj2-grp3/app')
g
ggplotly(p)
consumption_status <-
consumption_states %>%
subset(TopicDesc=="Cigarette Use (Adults)" & MeasureDesc=="Current Smoking") %>%
subset(Gender=="Overall" & Race=="All Races") %>%
subset(Age=="18 to 24 Years" | Age=="25 to 44 Years" | Age=="45 to 64 Years" | Age=="65 Years and Older")
consumption_status <-
consumption_status %>%
subset(YEAR=="2010")
p <- ggplot(consumption_status, aes(x=Age, y=Data_Value, fill=LocationDesc, color=Age)) +
geom_jitter(width=0.25) +
xlab("Age") +
ylab("Number of People (%)") +
theme(legend.position="none")
ggplotly(p)
runApp('~/Documents/Columbia/Applied Data Science/Spr2017-proj2-grp3/app')
runApp('~/Documents/Columbia/Applied Data Science/Spr2017-proj2-grp3/app')
runApp('~/Documents/Columbia/Applied Data Science/Spr2017-proj2-grp3/app')
runApp('~/Documents/Columbia/Applied Data Science/Spr2017-proj2-grp3/app')
runApp('~/Documents/Columbia/Applied Data Science/Spr2017-proj2-grp3/app')
