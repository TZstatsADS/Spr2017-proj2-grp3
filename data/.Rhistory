shinyApp(ui, server)
shinyApp(ui, server)
#### Body of the Dashboard ####
body <- dashboardBody(
## First Row: Map
fluidRow(
tabBox(
title = "",
width = 8,
height = 550,
tabPanel(
title = "Map",
leafletOutput("map", height = 490)
),
tabPanel(
title = "Methodology and Sources"
)
),
box(
title = "Legend", width = 4, height = 550, status="primary", solidHeader = TRUE,
sliderInput("year", label = h4("Year"),
min = 2010, max = 2014, value = 2012,
step = 1, ticks = FALSE, sep=""),
selectInput("gender", label = h4("Gender"),
choices = list("Overall"= "Overall", "Male"="Male", "Female"= "Female"),
selected = "Overall"),
radioButtons("cate", label = h4("Category"),
choices = list("Mortality Reason"="Mortality",
"Disease"="Prevalence"),
inline = T),
conditionalPanel("input.cate=='Mortality'",
selectInput("mortality",label = h4("Mortality Reason"),
choices = list("Heart failure"="Heart failure",
"Chronic obstructive pulmonary disease"="Chronic obstructive pulmonary disease",
"Coronary heart disease"="Coronary heart disease",
"Cerebrovascular disease"="Cerebrovascular disease",
"Cardiovascular disease"="Cardiovascular disease"),
selected = "Heart failure")),
conditionalPanel("input.cate=='Prevalence'",
selectInput("prevalence",
label = h4("Disease"),
choices = list("Chronic obstructive pulmonary disease prevalence"="Chronic obstructive pulmonary disease prevalence",
"Arthritis"="Arthritis",
"Asthma"="Asthma"),
selected="Asthma"))
)
),
## Second Row: Commercial Spendings
fluidRow(
tabBox(
title = "Commercial Spendings",
height = 500,
selected = "Total",
width = 12,
tabPanel("Total",
plotlyOutput("hist_advertising_total",
height= 420)
),
tabPanel("Per Media",
box(
selectInput("media", label = h5("Media"),
choices = list("Outdoor" = "Outdoor",
"Newspapers" = "Newspapers",
"Magazines" = "Magazines",
"Transit" = "Transit",
"Point-of-Sale" = "Point-of-Sale",
"Promotional Allowances" = "Promotional Allowances",
"Sampling Distribution" = "Sampling Distribution",
"Direct Mail" = "Direct Mail",
"Coupons & Retail-Value-Added" = "Coupons & Retail-Value-Added",
"Internet" = "Internet",
"Price Discounts" = "Price Discounts",
"Specialty Item Distribution" = "Specialty Item Distribution",
"Public Entertainment" ="Public Entertainment",
"Sponsorships" = "Sponsorships",
"Telephone" = "Telephone",
"Other" = "Other"
),
selected = 1),
width = 3
),
box(
plotlyOutput("hist_advertising_media",
height= 400),
width = 9
)
),
tabPanel("Methodology and Sources",
"Promotional Allowances spendings has decreased.
Missing Values are due to privacy.
")
)
),
## Third Row: Gender Analysis
fluidRow(
tabBox(
title = "Gender Comparison",
height = 700,
selected = "Mortality",
width = 12,
tabPanel(
title = "Mortality",
box(
width = 9,
plotlyOutput("RegPlot.m.g", height=620)
),
box(
width = 3,
helpText("Select the year:"),
uiOutput("YearSelector.m.g"),
helpText("Select one or more gender:"),
uiOutput("GenderSelector.m.g")
)
),
tabPanel(
title = "Prevalence",
box(
width = 9,
plotlyOutput("RegPlot.p.g")
),
box(
width = 3,
helpText("Select the year:"),
uiOutput("YearSelector.p.g"),
helpText("Select one or more gender:"),
uiOutput("GenderSelector.p.g"),
helpText("Note: For year 2012, there is no data for specific gender.")
)
),
tabPanel(
title = "Consumption",
box(
width = 9,
plotlyOutput("RegPlot.c.g")
),
box(
width = 3,
helpText("Select the year:"),
uiOutput("YearSelector.c.g"),
helpText("Select one or more gender:"),
uiOutput("GenderSelector.c.g")
)
),
tabPanel(
title = "Methodology and Sources"
)
)
),
## Fourth Row:
fluidRow(
tabBox(
title = "States Comparison",
height = 500,
selected = "Mortality",
width = 12,
tabPanel(
title = "Mortality",
box(
width = 9,
plotlyOutput("RegPlot.m.s")
),
box(
width = 3,
helpText("Select the year:"),
uiOutput("YearSelector.m.s")
)
),
tabPanel(
title = "Prevalence",
box(
width = 9,
plotlyOutput("RegPlot.p.s")
),
box(
width = 3,
helpText("Select the year:"),
uiOutput("YearSelector.p.s")
)
),
tabPanel(
title = "Methodology and Sources"
)
)
)
)
#### UI ####
ui <- dashboardPage(
header,
dashboardSidebar(disable=TRUE),
body
)
shinyApp(ui, server)
runApp('app_gender_mortality')
runApp('app_gender_mortality')
runApp('app_gender_mortality')
runApp('app_gender_mortality')
shinyApp(ui, server)
runApp('app_gender_mortality')
runApp('app_gender_mortality')
runApp('app_gender_mortality')
runApp('app_gender_mortality')
runApp('app_gender_mortality')
runApp('app_gender_mortality')
View(mortality_avg)
View(mortality_consumption)
View(mortality)
runApp('app_gender_mortality')
runApp('app_gender_mortality')
runApp('app_gender_mortality')
runApp('app_gender_mortality')
runApp('app_gender_mortality')
runApp('app_gender_mortality')
runApp('app_final')
runApp('app_final')
runApp('app_final')
runApp('app_final')
View(prevalence_avg)
View(prevalence_consumption)
View(prevalence)
runApp('app_final')
Sys.setenv(LANGUAGE = "en")
runApp('app_final')
runApp('app_final')
runApp('app_final')
runApp('app_final')
runApp('app_final')
runApp('app_final')
runApp('app_final')
runApp('app_final')
runApp('app_final')
runApp('app_final')
runApp('app_final')
runApp('app_final')
runApp('app_final')
runApp('app_final')
advertising <- read.csv("../output/advertising.csv", stringsAsFactors = FALSE, sep=",")
mortality <- read.csv("../output/states mortality.csv")
setwd("~/Documents/Columbia/Applied Data Science/Spr2017-proj2-grp3")
mortality <- read.csv("../output/states mortality.csv")
mortality <- read.csv("./output/states mortality.csv")
advertising <- read.csv("./output/advertising.csv", stringsAsFactors = FALSE, sep=",")
runApp('app_final')
runApp('app_final')
runApp('app')
setwd("~/Documents/Columbia/Applied Data Science/Spr2017-proj2-grp3")
consumption_us <- read.csv(".data/consumtion_tobacco_us.csv")
setwd("~/Documents/Columbia/Applied Data Science/Spr2017-proj2-grp3/app")
consumption_us <- read.csv(".data/consumtion_tobacco_us.csv")
consumption_us <- read.csv(".data/consumption_tobacco_us.csv")
consumption_us <- read.csv("./data/consumption_tobacco_us.csv")
df1 <- read.csv("./data/Behavioral_Risk_Factor_Data__Tobacco_Use__2010_And_Prior_.csv")
setwd("~/Documents/Columbia/Applied Data Science/Spr2017-proj2-grp3/app")
df1 <- read.csv("./data/Behavioral_Risk_Factor_Data__Tobacco_Use__2010_And_Prior_.csv")
setwd("~/Documents/Columbia/Applied Data Science/Spr2017-proj2-grp3/data")
test <- read.csv("CDI.csv")
consumption_us <- read.csv("consumption_tobacco_us.csv")
consumption_us <- read.csv("consumption_tobacco_us.csv", sep=";")
View(consumption_us)
g <- plot_ly(data=consumption_us, x=~year, y=~percentage)
g
g <- plot_ly(data=consumption_us, x=~year, y=~percentage,
layout(
title="Smokers in the US"
xaxis=list(title="Proportion of Smokers"),
yaxis=list(title="Year")
))
g
g <- plot_ly(data=consumption_us, x=~year, y=~percentage,
layout(
title="Smokers in the US",
xaxis=list(title="Proportion of Smokers"),
yaxis=list(title="Year")
))
g
g <-
plot_ly(data=consumption_us, x=~year, y=~percentage) %>%
layout(
title="Smokers in the US",
xaxis=list(title="Proportion of Smokers"),
yaxis=list(title="Year")
)
g
g <-
plot_ly(data=consumption_us, x=~year, y=~percentage,
mode="lines+markers") %>%
layout(
title="Smokers in the US",
yaxis=list(title="Proportion of Smokers"),
xaxis=list(title="Year")
)
g
g <-
plot_ly(data=consumption_us, x=~year, y=~percentage,
type="scatter", mode="lines+markers") %>%
layout(
title="Smokers in the US",
yaxis=list(title="Proportion of Smokers"),
xaxis=list(title="Year")
)
g
g <-
plot_ly(data=consumption_us, x=~year, y=~percentage,
type="scatter", mode="lines+markers") %>%
layout(
title="Smokers in the US",
yaxis=list(title="Proportion of Smokers", range=c(0:50)),
xaxis=list(title="Year")
)
g
g <-
plot_ly(data=consumption_us, x=~year, y=~percentage,
type="scatter", mode="lines+markers") %>%
layout(
title="Smokers in the US",
yaxis=list(title="Proportion of Smokers", range=c(0,50)),
xaxis=list(title="Year")
)
g
g <-
plot_ly(data=consumption_us, x=~year, y=~percentage,
type="scatter", mode="lines+markers") %>%
layout(
title="Smokers in the US",
yaxis=list(title="Proportion of Smokers (%)", range=c(0,50)),
xaxis=list(title="Year")
)
g
df1 <- read.csv("Behavioral_Risk_Factor_Data__Tobacco_Use__2010_And_Prior_.csv")
df2 <- read.csv("Behavioral_Risk_Factor_Data__Tobacco_Use__2011_to_present_.csv")
df2$DisplayOrder <- NULL
df2$SubMeasureID <- NULL
consumption_states <- rbind(df1,df2)
View(consumption_us)
View(consumption_states)
runApp('~/Documents/Columbia/Applied Data Science/Spr2017-proj2-grp3/app')
consumption_states$TopicType <- NULL
consumption_states$DataSource <- NULL
consumption_states$StratificationID1 <- NULL
consumption_states$StratificationID2 <- NULL
consumption_states$StratificationID3 <- NULL
consumption_states$StratificationID4 <- NULL
consumption_states$TopicTypeId <- NULL
consumption_states$TopicId <- NULL
consumption_states$MeasureId <- NULL
consumption_states$GeoLocation <- NULL
consumption_states$Sample_Size <- NULL
consumption_states$High_Confidence_Limit <- NULL
consumption_states$Low_Confidence_Limit <- NULL
consumption_states$Data_Value_Std_Err <- NULL
test <-
consumption_states %>%
subset(Gender="Overall", Age="All Ages")
View(test)
test <-
consumption_states %>%
subset(Gender=="Overall", Age=="All Ages")
test <-
consumption_states %>%
subset(Gender=="Overall")
test <-
consumption_states %>%
subset(Gender=="Overall" & Age=="All Ages")
View(test)
test <-
consumption_states %>%
subset(Gender=="Overall" & Age=="All Ages" & Race="All Races")
test <-
consumption_states %>%
subset(Gender=="Overall" & Age=="All Ages" & Race=="All Races")
test <-
consumption_states %>%
subset(TopicDesc=="Cigarette Use (Adults)")
subset(Gender=="Overall" & Age=="All Ages" & Race=="All Races")
test <-
consumption_states %>%
subset(TopicDesc=="Cigarette Use (Adults)") %>%
subset(Gender=="Overall" & Age=="All Ages" & Race=="All Races")
View(test)
test <-
consumption_states %>%
subset(TopicDesc=="Cigarette Use (Adults)" & MeasureDesc=="Smoking Status") %>%
subset(Gender=="Overall" & Age=="All Ages" & Race=="All Races")
consumption_status <-
consumption_status %>%
subset(LocationAbbr="AL")
consumption_status <-
consumption_states %>%
subset(TopicDesc=="Cigarette Use (Adults)" & MeasureDesc=="Smoking Status") %>%
subset(Gender=="Overall" & Age=="All Ages" & Race=="All Races")
consumption_status <-
consumption_status %>%
subset(LocationAbbr="AL")
pie <-
plot_ly(data= consumption_status, lables=~Response, values=~Data_Value,
type="pie",
textposition="inside",
textinfo ="label+percent",
hoverinfo ="text",
text=~paste(Data_Value, '%'))
pie
View(consumption_us)
View(consumption_status)
consumption_status <-
consumption_status %>%
subset(LocationAbbr=="AL")
View(consumption_status)
consumption_status <-
consumption_status %>%
subset(LocationAbbr=="AL", YEAR=="2010")
consumption_status <-
consumption_states %>%
subset(TopicDesc=="Cigarette Use (Adults)" & MeasureDesc=="Smoking Status") %>%
subset(Gender=="Overall" & Age=="All Ages" & Race=="All Races")
consumption_status <-
consumption_status %>%
subset(LocationAbbr=="AL", YEAR=="2010")
consumption_status <-
consumption_states %>%
subset(TopicDesc=="Cigarette Use (Adults)" & MeasureDesc=="Smoking Status") %>%
subset(Gender=="Overall" & Age=="All Ages" & Race=="All Races")
consumption_status <-
consumption_status %>%
subset(LocationAbbr=="AL" & YEAR=="2010")
pie <-
plot_ly(data= consumption_status, labels=~Response, values=~Data_Value,
type="pie",
textposition="inside",
textinfo ="label+percent",
hoverinfo ="text",
text=~paste(Data_Value, '%'))
pie
pie <-
plot_ly(data= consumption_status, labels=~Response, values=~Data_Value,
type="pie",
textposition="inside",
textinfo ="label+percent",
hoverinfo ="text",
text=~paste(Data_Value, '%')) %>%
layout(title = 'Smoking Status',
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))
pie
pie <-
plot_ly(data= consumption_status, labels=~Response, values=~Data_Value,
type="pie",
textposition="inside",
textinfo ="label+percent",
hoverinfo ="text",
text=~paste(Data_Value, '%'),
showlegend=FALSE) %>%
layout(title = 'Smoking Status',
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))
pie
consumption_animated <-
consumption_states %>%
subset(TopicDesc=="Cigarette Use (Adults)" & MeasureDesc=="Current Smoking") %>%
subset(Gender=="Overall" & Age=="All Ages" & Race=="All Races")
View(consumption_animated)
runApp('~/Documents/Columbia/Applied Data Science/Spr2017-proj2-grp3/app')
g <-
ggplot(consumption_status, aes(Response, Data_Value)) +
geom_bar(stat="identity")
g
g <-
ggplot(consumption_status, aes(Response, Data_Value, fill=Response)) +
geom_bar(stat="identity")
g
consumption_status <-
consumption_states %>%
subset(TopicDesc=="Cigarette Use (Adults)" & MeasureDesc=="Smoking Status") %>%
subset(Gender=="Overall" & Age=="All Ages" & Race=="All Races")
consumption_status <-
consumption_status %>%
subset(LocationAbbr=="AL")
g <-
ggplot(consumption_status, aes(Response, Data_Value, fill=Response)) +
geom_bar(stat="identity", aes(frame="YEAR"))
ggplotly(g)
g <-
ggplot(consumption_status, aes(Response, Data_Value, fill=Response)) +
geom_point(aes(frame="YEAR"))
ggplotly(g)
devtools::install_github(“ropensci/plotly”)
devtools::install_github("ropensci/plotly")
g <-
ggplot(consumption_status, aes(Response, Data_Value, fill=Response)) +
geom_point(aes(frame="YEAR"))
ggplotly(g)
library(shiny)
library(shinydashboard)
library(ggplot2)
library(dplyr)
library(purrr)
library(tidyr)
library(plotly)
library(reshape2)
library(RColorBrewer)
library(rgdal)
library(broom)
library(htmltools)
g <-
ggplot(consumption_status, aes(Response, Data_Value, fill=Response)) +
geom_point(aes(frame="YEAR"))
ggplotly(g)
install.library(ggplot2)
install.packages("ggplot2")
g <-
ggplot(consumption_status, aes(Response, Data_Value, fill=Response)) +
geom_point(aes(frame="YEAR"))
ggplotly(g)
install.packages("plotly")
